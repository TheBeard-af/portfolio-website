:root {
  --heading-font-weight: 700;
  --visited-color: #05676e;
  --active-color: #489c79;
  --primary-button: #357b70;
  --secondary-button: #e0b354;
  --dark-grey: #2b2b2b;
  --tile-background: lightgray;
}

body {
    background-color:white;

    /* <weight>: Use a value from 100 to 900 */
    font-family: "Roboto Condensed", sans-serif;
    font-optical-sizing: auto;
    font-weight: 400;
    font-style: normal;
    font-size: 16px;
    line-height: 1.6;
}

h1 {
    font-size: 30px;
    font-weight: var(--heading-font-weight);
}

h2 {
    font-size: 24px;
    font-weight: var(--heading-font-weight);

}

h3 {
    font-size: 18px;
    font-weight: var(--heading-font-weight);

}


a {
    color: var(--primary-color);
    /* text-decoration: none;
    position: relative; */
}

a:visited {
    /* visited link */
    color: var(--visited-color);
    /* content: ''; */
}
/* a::before {
  content: '';
  position: absolute;
  width: 100%;
  height: 2px;
  background: #357b70;
  left: 0;
  bottom: -1px;
  transition: transform 0.3s;
  transform: scaleX(1);
  } */

a:hover::before,
a:focus::before {
  transform: scaleX(0);
}

a:active {
    /* selected link */
    color: var(--active-color);
}

button, .button {
    /* overwrites browser defaults and resets the border */
    border: none;
    display: inline-block;
    /* takes the font from the outer container */
    font-family: inherit;
    /* styles the background color, font color, and text decoration (underline, etc.) of the button */
    background-color: var(--primary-button);
    color: white;
    text-decoration: none;
    /*adds spacing to the button (this will be discussed more in-depth later) */
    padding: 10px;
    border-radius: 3px;
    /* gives the button a bottom border with a width of 2px, a type of solid, and a color in RGBA format */
    border-bottom: 2px solid rgba(0, 0, 0, 0.3);
    transition: opacity 0.6s;
}

button:hover,
button:focus, 
.button:hover,
.button:focus {
    /* lets the mouse appear as a hand when hovering over the button */
    cursor: pointer;
    /* reduces the opacity of the button to 80% */
    opacity: 0.8;
}

.button__secondary {
    background-color: var(--secondary-button);
    color: #2b2b2b;
}

  .page-footer {
    clear: both;
  }
  .profile, .about-content {
    max-width: 700px;
    margin: 0 auto;
  }
  .about-content, .work__title {
    text-align: center;
  }
  .svg-img {
    max-width: 900px;
    margin: 0 auto
  }
  .profile__portrait {
    float: left;
    width: 250px;
    margin-right: 40px;
    border-radius: 50%;
  }

  .page-header__item:first-child {
    width: 200px;
    height: 70px
  }
  * {
    box-sizing: border-box;
  }
  .page-footer {
    clear: both;
    display: flex;
    flex-direction: column;
    text-align:center;
}
.page-header {
    display: flex;
    width: 100%;
    padding: 20px;
    border-bottom: 1px solid lightgray;
  }
  .page-header__item {
    flex: 0 1 200px;
  }
  .page-header__item:last-child {
    flex-grow: 1;
    text-align: right;
  }
  .navigation-list {
    list-style-type: none;
  }
  .navigation-list li {
    display: inline-block;
    margin-left: 15px;
  }
  .navigation-list__item--active {
    text-decoration: none;
  }

/* start grid fallback */
.grid__item {
    display: inline-block;
    width: 33%;
   }
   /* end grid fallback */
   
   @supports (display: grid) {
    .grid {
      display: grid;
      /* grid-template-columns: 300px 300px 300px; fractions are better than pixels - they are responsive */
      grid-template-columns: 1fr 1fr 1fr;
      grid-gap: 20px;
      margin: 0;
   
    }
    .grid__item {
      background-color: var(--tile-background);
      width: auto;
      min-height: auto;
      margin: 0;
      padding: 10px;
      transition: transform 0.3s ease-in-out;
    }
    .grid__item:hover {
      transform: scale(1.05);
      z-index: 1;
  }
    .grid__item:last-child {
      grid-column: 3 / 3;
      grid-row: 1 / 3;
    }
   }

   @media all and (max-width: 500px) {
    .grid {
      grid-template-columns: 1fr;
    }
  }
  @media all and (min-width: 500px) and (max-width: 750px){
    .grid {
      grid-template-columns: 1fr 1fr;
    }
  }
  @media all and (max-width: 750px) {
    .grid {
      grid-gap: 10px;
    }
    .grid__item:last-child {
      grid-column: auto / auto;
      grid-row: auto / auto;
    }
    h1 {
      font-size: 22px;
    }
  }
  @keyframes color-change {
    0% {
      fill: #edc655;
    }
    50% {
      fill: #fcffad;
    }
    100% {
      fill: #f76414;
    }
  }
  /* .sun {
    animation-duration: 4s;
    animation-name: color-change;
    animation-iteration-count: infinite;
    animation-direction: alternate;
    animation-timing-function: linear;
  } */
  .sun {
    animation: 4s color-change infinite alternate linear;
  }
  @keyframes cloud-move {
    from {
      transform: translate(0, 50px);
    }
    to {
      transform: translate(200px, 50px);
    }
  }
  .cloud-front {
    animation: 30s cloud-move infinite alternate linear;
  }
  @keyframes cloud-move-reverse {
    from {
      transform: translate(446px, 48px);
    }
    to {
      transform: translate(100px, 48px);
    }
  }
  .cloud-back {
    animation: 34s cloud-move-reverse infinite alternate linear;
  }

